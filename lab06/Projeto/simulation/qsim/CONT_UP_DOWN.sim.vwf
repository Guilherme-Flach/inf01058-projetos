/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 0.0;
	GRID_DUTY_CYCLE = 50;
}




SIGNAL("RES")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("CLK_IN")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("CLK_S")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("OP")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("OP[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "OP";
}

SIGNAL("OP[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "OP";
}

SIGNAL("C_IN")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("C_IN[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "C_IN";
}

SIGNAL("C_IN[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "C_IN";
}

SIGNAL("C_IN[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "C_IN";
}

SIGNAL("C_IN[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "C_IN";
}

SIGNAL("C_IN[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "C_IN";
}

SIGNAL("C_IN[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "C_IN";
}

SIGNAL("C_IN[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "C_IN";
}

SIGNAL("C_IN[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "C_IN";
}

SIGNAL("A1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("B1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("C1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("D1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("E1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("F1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("G1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("A0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("B0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("C0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("D0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("E0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("F0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("G0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("RES")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 760.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 180.0;
	}
}
TRANSITION_LIST("CLK_IN")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
	}
}
TRANSITION_LIST("CLK_S")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}
TRANSITION_LIST("OP[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 260.0;
		LEVEL 1 FOR 190.0;
		LEVEL 0 FOR 210.0;
	}
}
TRANSITION_LIST("OP[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 340.0;
		LEVEL 1 FOR 450.0;
		LEVEL 0 FOR 210.0;
	}
}
TRANSITION_LIST("C_IN[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}
TRANSITION_LIST("C_IN[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}
TRANSITION_LIST("C_IN[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}
TRANSITION_LIST("C_IN[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}
TRANSITION_LIST("C_IN[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}
TRANSITION_LIST("C_IN[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}
TRANSITION_LIST("C_IN[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 740.0;
		LEVEL 1 FOR 260.0;
	}
}
TRANSITION_LIST("C_IN[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 740.0;
		LEVEL 1 FOR 260.0;
	}
}
TRANSITION_LIST("A1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3.746;
		LEVEL 0 FOR 180.169;
		LEVEL 1 FOR 160.028;
		LEVEL 0 FOR 270.11;
		LEVEL 1 FOR 159.89;
		LEVEL 0 FOR 226.057;
	}
}
TRANSITION_LIST("B1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3.757;
		LEVEL 0 FOR 996.243;
	}
}
TRANSITION_LIST("C1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3.43;
		LEVEL 0 FOR 340.565;
		LEVEL 1 FOR 269.862;
		LEVEL 0 FOR 386.143;
	}
}
TRANSITION_LIST("D1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3.788;
		LEVEL 0 FOR 180.17;
		LEVEL 1 FOR 160.027;
		LEVEL 0 FOR 270.11;
		LEVEL 1 FOR 159.89;
		LEVEL 0 FOR 226.015;
	}
}
TRANSITION_LIST("E1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3.755;
		LEVEL 0 FOR 180.178;
		LEVEL 1 FOR 160.019;
		LEVEL 0 FOR 269.981;
		LEVEL 1 FOR 160.019;
		LEVEL 0 FOR 226.048;
	}
}
TRANSITION_LIST("F1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 4.054;
		LEVEL 0 FOR 180.126;
		LEVEL 1 FOR 590.071;
		LEVEL 0 FOR 225.749;
	}
}
TRANSITION_LIST("G1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3.776;
		LEVEL 1 FOR 340.198;
		LEVEL 0 FOR 270.082;
		LEVEL 1 FOR 385.944;
	}
}
TRANSITION_LIST("A0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3.691;
		LEVEL 0 FOR 130.191;
		LEVEL 1 FOR 10.075;
		LEVEL 0 FOR 9.925;
		LEVEL 1 FOR 10.006;
		LEVEL 0 FOR 29.994;
		LEVEL 1 FOR 10.006;
		LEVEL 0 FOR 19.963;
		LEVEL 1 FOR 10.02;
		LEVEL 0 FOR 60.011;
		LEVEL 1 FOR 10.075;
		LEVEL 0 FOR 9.925;
		LEVEL 1 FOR 10.006;
		LEVEL 0 FOR 310.076;
		LEVEL 1 FOR 9.977;
		LEVEL 0 FOR 9.954;
		LEVEL 1 FOR 10.046;
		LEVEL 0 FOR 60.011;
		LEVEL 1 FOR 9.936;
		LEVEL 0 FOR 20.076;
		LEVEL 1 FOR 9.977;
		LEVEL 0 FOR 30.023;
		LEVEL 1 FOR 4.153;
		LEVEL 0 FOR 35.765;
		LEVEL 1 FOR 166.118;
	}
}
TRANSITION_LIST("B0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3.885;
		LEVEL 0 FOR 130.191;
		LEVEL 1 FOR 19.942;
		LEVEL 0 FOR 10.048;
		LEVEL 1 FOR 20.016;
		LEVEL 0 FOR 49.994;
		LEVEL 1 FOR 19.942;
		LEVEL 0 FOR 40.058;
		LEVEL 1 FOR 19.942;
		LEVEL 0 FOR 10.048;
		LEVEL 1 FOR 20.016;
		LEVEL 0 FOR 269.994;
		LEVEL 1 FOR 19.997;
		LEVEL 0 FOR 10.067;
		LEVEL 1 FOR 19.942;
		LEVEL 0 FOR 40.058;
		LEVEL 1 FOR 19.942;
		LEVEL 0 FOR 49.994;
		LEVEL 1 FOR 19.997;
		LEVEL 0 FOR 40.003;
		LEVEL 1 FOR 165.924;
	}
}
TRANSITION_LIST("C0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3.816;
		LEVEL 0 FOR 140.174;
		LEVEL 1 FOR 9.886;
		LEVEL 0 FOR 10.097;
		LEVEL 1 FOR 19.96;
		LEVEL 0 FOR 20.012;
		LEVEL 1 FOR 9.931;
		LEVEL 0 FOR 90.114;
		LEVEL 1 FOR 9.886;
		LEVEL 0 FOR 10.097;
		LEVEL 1 FOR 19.96;
		LEVEL 0 FOR 270.057;
		LEVEL 1 FOR 20.023;
		LEVEL 0 FOR 9.96;
		LEVEL 1 FOR 10.055;
		LEVEL 0 FOR 89.945;
		LEVEL 1 FOR 9.903;
		LEVEL 0 FOR 20.114;
		LEVEL 1 FOR 20.023;
		LEVEL 0 FOR 205.987;
	}
}
TRANSITION_LIST("D0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3.826;
		LEVEL 0 FOR 120.105;
		LEVEL 1 FOR 9.977;
		LEVEL 0 FOR 39.973;
		LEVEL 1 FOR 10.142;
		LEVEL 0 FOR 9.858;
		LEVEL 1 FOR 10.124;
		LEVEL 0 FOR 19.961;
		LEVEL 1 FOR 9.942;
		LEVEL 0 FOR 19.973;
		LEVEL 1 FOR 10.124;
		LEVEL 0 FOR 19.926;
		LEVEL 1 FOR 9.977;
		LEVEL 0 FOR 39.973;
		LEVEL 1 FOR 10.142;
		LEVEL 0 FOR 269.943;
		LEVEL 1 FOR 10.039;
		LEVEL 0 FOR 39.973;
		LEVEL 1 FOR 9.93;
		LEVEL 0 FOR 20.058;
		LEVEL 1 FOR 10.039;
		LEVEL 0 FOR 19.973;
		LEVEL 1 FOR 10.045;
		LEVEL 0 FOR 19.98;
		LEVEL 1 FOR 10.002;
		LEVEL 0 FOR 9.961;
		LEVEL 1 FOR 10.039;
		LEVEL 0 FOR 215.995;
	}
}
TRANSITION_LIST("E0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3.811;
		LEVEL 0 FOR 110.059;
		LEVEL 1 FOR 10.121;
		LEVEL 0 FOR 69.879;
		LEVEL 1 FOR 10.121;
		LEVEL 0 FOR 9.879;
		LEVEL 1 FOR 30.067;
		LEVEL 0 FOR 9.933;
		LEVEL 1 FOR 9.998;
		LEVEL 0 FOR 10.002;
		LEVEL 1 FOR 10.121;
		LEVEL 0 FOR 389.997;
		LEVEL 1 FOR 10.003;
		LEVEL 0 FOR 9.879;
		LEVEL 1 FOR 10.121;
		LEVEL 0 FOR 9.879;
		LEVEL 1 FOR 30.121;
		LEVEL 0 FOR 9.879;
		LEVEL 1 FOR 10.121;
		LEVEL 0 FOR 236.009;
	}
}
TRANSITION_LIST("F0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3.63;
		LEVEL 0 FOR 150.1;
		LEVEL 1 FOR 10.068;
		LEVEL 0 FOR 29.932;
		LEVEL 1 FOR 30.097;
		LEVEL 0 FOR 29.903;
		LEVEL 1 FOR 9.969;
		LEVEL 0 FOR 50.031;
		LEVEL 1 FOR 10.068;
		LEVEL 0 FOR 310.05;
		LEVEL 1 FOR 9.95;
		LEVEL 0 FOR 50.005;
		LEVEL 1 FOR 9.995;
		LEVEL 0 FOR 29.984;
		LEVEL 1 FOR 30.016;
		LEVEL 0 FOR 30.05;
		LEVEL 1 FOR 4.163;
		LEVEL 0 FOR 201.989;
	}
}
TRANSITION_LIST("G0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 3.845;
		LEVEL 1 FOR 39.868;
		LEVEL 0 FOR 100.287;
		LEVEL 1 FOR 9.997;
		LEVEL 0 FOR 30.045;
		LEVEL 1 FOR 19.968;
		LEVEL 0 FOR 49.994;
		LEVEL 1 FOR 9.709;
		LEVEL 0 FOR 40.287;
		LEVEL 1 FOR 9.997;
		LEVEL 0 FOR 30.045;
		LEVEL 1 FOR 269.671;
		LEVEL 0 FOR 30.359;
		LEVEL 1 FOR 9.938;
		LEVEL 0 FOR 39.99;
		LEVEL 1 FOR 10.065;
		LEVEL 0 FOR 50.043;
		LEVEL 1 FOR 19.605;
		LEVEL 0 FOR 24.558;
		LEVEL 1 FOR 35.442;
		LEVEL 0 FOR 166.287;
	}
}


DISPLAY_LINE
{
	CHANNEL = "RES";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CLK_IN";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CLK_S";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "OP";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
	CHILDREN = 4, 5;
}

DISPLAY_LINE
{
	CHANNEL = "OP[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "OP[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "C_IN";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
	CHILDREN = 7, 8, 9, 10, 11, 12, 13, 14;
}

DISPLAY_LINE
{
	CHANNEL = "C_IN[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "C_IN[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "C_IN[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "C_IN[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "C_IN[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "C_IN[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "C_IN[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "C_IN[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "A1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "B1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "C1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "D1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "E1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "F1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 20;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "G1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 21;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 22;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "B0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 23;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "C0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 24;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "D0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 25;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "E0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 26;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "F0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 27;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "G0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 28;
	TREE_LEVEL = 0;
}
TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
