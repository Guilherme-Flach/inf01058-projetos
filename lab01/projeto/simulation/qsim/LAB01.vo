// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.1.0 Build 162 10/23/2013 SJ Web Edition"

// DATE "10/20/2023 13:13:24"

// 
// Device: Altera EP4CGX15BF14C6 Package FBGA169
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module LAB01 (
	Cout,
	A,
	B,
	S);
output 	Cout;
input 	[3:0] A;
input 	[3:0] B;
output 	[3:0] S;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \Cout~output_o ;
wire \S[3]~output_o ;
wire \S[2]~output_o ;
wire \S[1]~output_o ;
wire \S[0]~output_o ;
wire \A[2]~input_o ;
wire \B[2]~input_o ;
wire \inst3|inst6~0_combout ;
wire \B[0]~input_o ;
wire \A[0]~input_o ;
wire \A[1]~input_o ;
wire \B[1]~input_o ;
wire \inst2|inst6~0_combout ;
wire \inst3|inst6~1_combout ;
wire \A[3]~input_o ;
wire \B[3]~input_o ;
wire \inst4|inst6~0_combout ;
wire \inst4|inst5~combout ;
wire \inst3|inst5~0_combout ;
wire \inst2|inst5~0_combout ;
wire \inst|inst~combout ;


cycloneiv_io_obuf \Cout~output (
	.i(\inst4|inst6~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Cout~output_o ),
	.obar());
// synopsys translate_off
defparam \Cout~output .bus_hold = "false";
defparam \Cout~output .open_drain_output = "false";
// synopsys translate_on

cycloneiv_io_obuf \S[3]~output (
	.i(\inst4|inst5~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\S[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \S[3]~output .bus_hold = "false";
defparam \S[3]~output .open_drain_output = "false";
// synopsys translate_on

cycloneiv_io_obuf \S[2]~output (
	.i(\inst3|inst5~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\S[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \S[2]~output .bus_hold = "false";
defparam \S[2]~output .open_drain_output = "false";
// synopsys translate_on

cycloneiv_io_obuf \S[1]~output (
	.i(\inst2|inst5~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\S[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \S[1]~output .bus_hold = "false";
defparam \S[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneiv_io_obuf \S[0]~output (
	.i(\inst|inst~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\S[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \S[0]~output .bus_hold = "false";
defparam \S[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneiv_io_ibuf \A[2]~input (
	.i(A[2]),
	.ibar(gnd),
	.o(\A[2]~input_o ));
// synopsys translate_off
defparam \A[2]~input .bus_hold = "false";
defparam \A[2]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneiv_io_ibuf \B[2]~input (
	.i(B[2]),
	.ibar(gnd),
	.o(\B[2]~input_o ));
// synopsys translate_off
defparam \B[2]~input .bus_hold = "false";
defparam \B[2]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneiv_lcell_comb \inst3|inst6~0 (
// Equation(s):
// \inst3|inst6~0_combout  = (\A[2]~input_o  & \B[2]~input_o )

	.dataa(\A[2]~input_o ),
	.datab(\B[2]~input_o ),
	.datac(gnd),
	.datad(gnd),
	.cin(gnd),
	.combout(\inst3|inst6~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst3|inst6~0 .lut_mask = 16'h8888;
defparam \inst3|inst6~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneiv_io_ibuf \B[0]~input (
	.i(B[0]),
	.ibar(gnd),
	.o(\B[0]~input_o ));
// synopsys translate_off
defparam \B[0]~input .bus_hold = "false";
defparam \B[0]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneiv_io_ibuf \A[0]~input (
	.i(A[0]),
	.ibar(gnd),
	.o(\A[0]~input_o ));
// synopsys translate_off
defparam \A[0]~input .bus_hold = "false";
defparam \A[0]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneiv_io_ibuf \A[1]~input (
	.i(A[1]),
	.ibar(gnd),
	.o(\A[1]~input_o ));
// synopsys translate_off
defparam \A[1]~input .bus_hold = "false";
defparam \A[1]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneiv_io_ibuf \B[1]~input (
	.i(B[1]),
	.ibar(gnd),
	.o(\B[1]~input_o ));
// synopsys translate_off
defparam \B[1]~input .bus_hold = "false";
defparam \B[1]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneiv_lcell_comb \inst2|inst6~0 (
// Equation(s):
// \inst2|inst6~0_combout  = (\A[1]~input_o  & ((\B[1]~input_o ) # ((\B[0]~input_o  & \A[0]~input_o )))) # (!\A[1]~input_o  & (\B[0]~input_o  & (\A[0]~input_o  & \B[1]~input_o )))

	.dataa(\B[0]~input_o ),
	.datab(\A[0]~input_o ),
	.datac(\A[1]~input_o ),
	.datad(\B[1]~input_o ),
	.cin(gnd),
	.combout(\inst2|inst6~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst2|inst6~0 .lut_mask = 16'hF880;
defparam \inst2|inst6~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneiv_lcell_comb \inst3|inst6~1 (
// Equation(s):
// \inst3|inst6~1_combout  = (\inst2|inst6~0_combout  & ((\A[2]~input_o ) # (\B[2]~input_o )))

	.dataa(\inst2|inst6~0_combout ),
	.datab(\A[2]~input_o ),
	.datac(\B[2]~input_o ),
	.datad(gnd),
	.cin(gnd),
	.combout(\inst3|inst6~1_combout ),
	.cout());
// synopsys translate_off
defparam \inst3|inst6~1 .lut_mask = 16'hA8A8;
defparam \inst3|inst6~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneiv_io_ibuf \A[3]~input (
	.i(A[3]),
	.ibar(gnd),
	.o(\A[3]~input_o ));
// synopsys translate_off
defparam \A[3]~input .bus_hold = "false";
defparam \A[3]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneiv_io_ibuf \B[3]~input (
	.i(B[3]),
	.ibar(gnd),
	.o(\B[3]~input_o ));
// synopsys translate_off
defparam \B[3]~input .bus_hold = "false";
defparam \B[3]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneiv_lcell_comb \inst4|inst6~0 (
// Equation(s):
// \inst4|inst6~0_combout  = (\A[3]~input_o  & ((\inst3|inst6~0_combout ) # ((\inst3|inst6~1_combout ) # (\B[3]~input_o )))) # (!\A[3]~input_o  & (\B[3]~input_o  & ((\inst3|inst6~0_combout ) # (\inst3|inst6~1_combout ))))

	.dataa(\inst3|inst6~0_combout ),
	.datab(\inst3|inst6~1_combout ),
	.datac(\A[3]~input_o ),
	.datad(\B[3]~input_o ),
	.cin(gnd),
	.combout(\inst4|inst6~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst4|inst6~0 .lut_mask = 16'hFEE0;
defparam \inst4|inst6~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneiv_lcell_comb \inst4|inst5 (
// Equation(s):
// \inst4|inst5~combout  = \A[3]~input_o  $ (\B[3]~input_o  $ (((\inst3|inst6~0_combout ) # (\inst3|inst6~1_combout ))))

	.dataa(\A[3]~input_o ),
	.datab(\B[3]~input_o ),
	.datac(\inst3|inst6~0_combout ),
	.datad(\inst3|inst6~1_combout ),
	.cin(gnd),
	.combout(\inst4|inst5~combout ),
	.cout());
// synopsys translate_off
defparam \inst4|inst5 .lut_mask = 16'h9996;
defparam \inst4|inst5 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneiv_lcell_comb \inst3|inst5~0 (
// Equation(s):
// \inst3|inst5~0_combout  = \A[2]~input_o  $ (\B[2]~input_o  $ (\inst2|inst6~0_combout ))

	.dataa(\A[2]~input_o ),
	.datab(\B[2]~input_o ),
	.datac(\inst2|inst6~0_combout ),
	.datad(gnd),
	.cin(gnd),
	.combout(\inst3|inst5~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst3|inst5~0 .lut_mask = 16'h9696;
defparam \inst3|inst5~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneiv_lcell_comb \inst2|inst5~0 (
// Equation(s):
// \inst2|inst5~0_combout  = \A[1]~input_o  $ (\B[1]~input_o  $ (((\B[0]~input_o  & \A[0]~input_o ))))

	.dataa(\B[0]~input_o ),
	.datab(\A[0]~input_o ),
	.datac(\A[1]~input_o ),
	.datad(\B[1]~input_o ),
	.cin(gnd),
	.combout(\inst2|inst5~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst2|inst5~0 .lut_mask = 16'h8778;
defparam \inst2|inst5~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneiv_lcell_comb \inst|inst (
// Equation(s):
// \inst|inst~combout  = \B[0]~input_o  $ (\A[0]~input_o )

	.dataa(gnd),
	.datab(gnd),
	.datac(\B[0]~input_o ),
	.datad(\A[0]~input_o ),
	.cin(gnd),
	.combout(\inst|inst~combout ),
	.cout());
// synopsys translate_off
defparam \inst|inst .lut_mask = 16'h0FF0;
defparam \inst|inst .sum_lutc_input = "datac";
// synopsys translate_on

assign Cout = \Cout~output_o ;

assign S[3] = \S[3]~output_o ;

assign S[2] = \S[2]~output_o ;

assign S[1] = \S[1]~output_o ;

assign S[0] = \S[0]~output_o ;

endmodule
