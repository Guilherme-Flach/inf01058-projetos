/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 0.0;
	GRID_DUTY_CYCLE = 50;
}




SIGNAL("RST")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("RUN_STEP")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("STEP_UP")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("PC_O")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("PC_O[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PC_O";
}

SIGNAL("PC_O[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PC_O";
}

SIGNAL("PC_O[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PC_O";
}

SIGNAL("PC_O[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PC_O";
}

SIGNAL("PC_O[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PC_O";
}

SIGNAL("PC_O[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PC_O";
}

SIGNAL("PC_O[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PC_O";
}

SIGNAL("PC_O[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "PC_O";
}

SIGNAL("AC_O")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("AC_O[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AC_O";
}

SIGNAL("AC_O[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AC_O";
}

SIGNAL("AC_O[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AC_O";
}

SIGNAL("AC_O[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AC_O";
}

SIGNAL("AC_O[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AC_O";
}

SIGNAL("AC_O[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AC_O";
}

SIGNAL("AC_O[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AC_O";
}

SIGNAL("AC_O[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AC_O";
}

SIGNAL("C_AC")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("RST")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 990.0;
	}
}
TRANSITION_LIST("RUN_STEP")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}
TRANSITION_LIST("STEP_UP")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 8.75;
		LEVEL 1 FOR 8.75;
		LEVEL 0 FOR 2.5;
	}
}
TRANSITION_LIST("PC_O[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}
TRANSITION_LIST("PC_O[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}
TRANSITION_LIST("PC_O[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}
TRANSITION_LIST("PC_O[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 831.25;
		LEVEL 1 FOR 168.75;
	}
}
TRANSITION_LIST("PC_O[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 568.75;
		LEVEL 1 FOR 262.5;
		LEVEL 0 FOR 168.75;
	}
}
TRANSITION_LIST("PC_O[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 288.75;
		LEVEL 1 FOR 280.0;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 192.5;
		LEVEL 0 FOR 168.75;
	}
}
TRANSITION_LIST("PC_O[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 113.75;
		LEVEL 1 FOR 175.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 122.5;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 168.75;
	}
}
TRANSITION_LIST("PC_O[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 61.25;
		LEVEL 1 FOR 52.5;
		LEVEL 0 FOR 87.5;
		LEVEL 1 FOR 87.5;
		LEVEL 0 FOR 52.5;
		LEVEL 1 FOR 87.5;
		LEVEL 0 FOR 52.5;
		LEVEL 1 FOR 87.5;
		LEVEL 0 FOR 70.0;
		LEVEL 1 FOR 52.5;
		LEVEL 0 FOR 52.5;
		LEVEL 1 FOR 87.5;
		LEVEL 0 FOR 168.75;
	}
}
TRANSITION_LIST("AC_O[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 236.25;
		LEVEL 1 FOR 297.5;
		LEVEL 0 FOR 466.25;
	}
}
TRANSITION_LIST("AC_O[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 236.25;
		LEVEL 1 FOR 297.5;
		LEVEL 0 FOR 466.25;
	}
}
TRANSITION_LIST("AC_O[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 236.25;
		LEVEL 1 FOR 297.5;
		LEVEL 0 FOR 466.25;
	}
}
TRANSITION_LIST("AC_O[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 236.25;
		LEVEL 1 FOR 297.5;
		LEVEL 0 FOR 466.25;
	}
}
TRANSITION_LIST("AC_O[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 166.25;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 763.75;
	}
}
TRANSITION_LIST("AC_O[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 236.25;
		LEVEL 1 FOR 297.5;
		LEVEL 0 FOR 466.25;
	}
}
TRANSITION_LIST("AC_O[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 166.25;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 157.5;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 466.25;
	}
}
TRANSITION_LIST("AC_O[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 236.25;
		LEVEL 1 FOR 157.5;
		LEVEL 0 FOR 402.5;
		LEVEL 1 FOR 203.75;
	}
}
TRANSITION_LIST("C_AC")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 148.75;
		LEVEL 1 FOR 17.5;
		LEVEL 0 FOR 52.5;
		LEVEL 1 FOR 17.5;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 17.5;
		LEVEL 0 FOR 122.5;
		LEVEL 1 FOR 17.5;
		LEVEL 0 FOR 245.0;
		LEVEL 1 FOR 17.5;
		LEVEL 0 FOR 203.75;
	}
}


DISPLAY_LINE
{
	CHANNEL = "RST";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "RUN_STEP";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "STEP_UP";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "PC_O";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
	CHILDREN = 4, 5, 6, 7, 8, 9, 10, 11;
}

DISPLAY_LINE
{
	CHANNEL = "PC_O[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "PC_O[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "PC_O[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "PC_O[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "PC_O[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "PC_O[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "PC_O[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "PC_O[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "C_AC";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "AC_O";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 0;
	CHILDREN = 14, 15, 16, 17, 18, 19, 20, 21;
}

DISPLAY_LINE
{
	CHANNEL = "AC_O[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "AC_O[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "AC_O[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "AC_O[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "AC_O[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "AC_O[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "AC_O[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "AC_O[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 13;
}
TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
